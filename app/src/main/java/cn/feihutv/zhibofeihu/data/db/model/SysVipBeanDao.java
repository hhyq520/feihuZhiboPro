package cn.feihutv.zhibofeihu.data.db.model;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "SYS_VIP_BEAN".
*/
public class SysVipBeanDao extends AbstractDao<SysVipBean, Long> {

    public static final String TABLENAME = "SYS_VIP_BEAN";

    /**
     * Properties of entity SysVipBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Vip = new Property(0, Long.class, "vip", true, "_id");
        public final static Property NeedCzz = new Property(1, int.class, "needCzz", false, "NEED_CZZ");
        public final static Property Day = new Property(2, String.class, "day", false, "DAY");
        public final static Property Watch30min = new Property(3, String.class, "watch30min", false, "WATCH30MIN");
        public final static Property Online1hour = new Property(4, String.class, "online1hour", false, "ONLINE1HOUR");
        public final static Property GiftExpAdd = new Property(5, String.class, "giftExpAdd", false, "GIFT_EXP_ADD");
        public final static Property GameCnt = new Property(6, String.class, "gameCnt", false, "GAME_CNT");
        public final static Property VipMountId = new Property(7, String.class, "vipMountId", false, "VIP_MOUNT_ID");
    }


    public SysVipBeanDao(DaoConfig config) {
        super(config);
    }
    
    public SysVipBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SYS_VIP_BEAN\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: vip
                "\"NEED_CZZ\" INTEGER NOT NULL ," + // 1: needCzz
                "\"DAY\" TEXT," + // 2: day
                "\"WATCH30MIN\" TEXT," + // 3: watch30min
                "\"ONLINE1HOUR\" TEXT," + // 4: online1hour
                "\"GIFT_EXP_ADD\" TEXT," + // 5: giftExpAdd
                "\"GAME_CNT\" TEXT," + // 6: gameCnt
                "\"VIP_MOUNT_ID\" TEXT);"); // 7: vipMountId
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SYS_VIP_BEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, SysVipBean entity) {
        stmt.clearBindings();
 
        Long vip = entity.getVip();
        if (vip != null) {
            stmt.bindLong(1, vip);
        }
        stmt.bindLong(2, entity.getNeedCzz());
 
        String day = entity.getDay();
        if (day != null) {
            stmt.bindString(3, day);
        }
 
        String watch30min = entity.getWatch30min();
        if (watch30min != null) {
            stmt.bindString(4, watch30min);
        }
 
        String online1hour = entity.getOnline1hour();
        if (online1hour != null) {
            stmt.bindString(5, online1hour);
        }
 
        String giftExpAdd = entity.getGiftExpAdd();
        if (giftExpAdd != null) {
            stmt.bindString(6, giftExpAdd);
        }
 
        String gameCnt = entity.getGameCnt();
        if (gameCnt != null) {
            stmt.bindString(7, gameCnt);
        }
 
        String vipMountId = entity.getVipMountId();
        if (vipMountId != null) {
            stmt.bindString(8, vipMountId);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, SysVipBean entity) {
        stmt.clearBindings();
 
        Long vip = entity.getVip();
        if (vip != null) {
            stmt.bindLong(1, vip);
        }
        stmt.bindLong(2, entity.getNeedCzz());
 
        String day = entity.getDay();
        if (day != null) {
            stmt.bindString(3, day);
        }
 
        String watch30min = entity.getWatch30min();
        if (watch30min != null) {
            stmt.bindString(4, watch30min);
        }
 
        String online1hour = entity.getOnline1hour();
        if (online1hour != null) {
            stmt.bindString(5, online1hour);
        }
 
        String giftExpAdd = entity.getGiftExpAdd();
        if (giftExpAdd != null) {
            stmt.bindString(6, giftExpAdd);
        }
 
        String gameCnt = entity.getGameCnt();
        if (gameCnt != null) {
            stmt.bindString(7, gameCnt);
        }
 
        String vipMountId = entity.getVipMountId();
        if (vipMountId != null) {
            stmt.bindString(8, vipMountId);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public SysVipBean readEntity(Cursor cursor, int offset) {
        SysVipBean entity = new SysVipBean( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // vip
            cursor.getInt(offset + 1), // needCzz
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // day
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // watch30min
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // online1hour
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // giftExpAdd
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // gameCnt
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7) // vipMountId
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, SysVipBean entity, int offset) {
        entity.setVip(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setNeedCzz(cursor.getInt(offset + 1));
        entity.setDay(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setWatch30min(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setOnline1hour(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setGiftExpAdd(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setGameCnt(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setVipMountId(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(SysVipBean entity, long rowId) {
        entity.setVip(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(SysVipBean entity) {
        if(entity != null) {
            return entity.getVip();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(SysVipBean entity) {
        return entity.getVip() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
