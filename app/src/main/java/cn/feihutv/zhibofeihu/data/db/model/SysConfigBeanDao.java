package cn.feihutv.zhibofeihu.data.db.model;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "SYS_CONFIG_BEAN".
*/
public class SysConfigBeanDao extends AbstractDao<SysConfigBean, Long> {

    public static final String TABLENAME = "SYS_CONFIG_BEAN";

    /**
     * Properties of entity SysConfigBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property CosGiftRootPath = new Property(1, String.class, "CosGiftRootPath", false, "COS_GIFT_ROOT_PATH");
        public final static Property CosGoodsRootPath = new Property(2, String.class, "CosGoodsRootPath", false, "COS_GOODS_ROOT_PATH");
        public final static Property CosRootPath = new Property(3, String.class, "CosRootPath", false, "COS_ROOT_PATH");
        public final static Property CosTagRootPath = new Property(4, String.class, "CosTagRootPath", false, "COS_TAG_ROOT_PATH");
        public final static Property CosMountRootPath = new Property(5, String.class, "CosMountRootPath", false, "COS_MOUNT_ROOT_PATH");
        public final static Property CosAnimationRootPath = new Property(6, String.class, "CosAnimationRootPath", false, "COS_ANIMATION_ROOT_PATH");
        public final static Property CosAnimtionTemplate520 = new Property(7, String.class, "CosAnimtionTemplate520", false, "COS_ANIMTION_TEMPLATE520");
        public final static Property CosAnimtionTemplate1314 = new Property(8, String.class, "CosAnimtionTemplate1314", false, "COS_ANIMTION_TEMPLATE1314");
        public final static Property CosAnimationLandRootPath = new Property(9, String.class, "CosAnimationLandRootPath", false, "COS_ANIMATION_LAND_ROOT_PATH");
        public final static Property CosGiftTemplate1314 = new Property(10, String.class, "CosGiftTemplate1314", false, "COS_GIFT_TEMPLATE1314");
        public final static Property CosGiftTemplate520 = new Property(11, String.class, "CosGiftTemplate520", false, "COS_GIFT_TEMPLATE520");
        public final static Property CosAnimtionTemplate1314_android = new Property(12, String.class, "CosAnimtionTemplate1314_android", false, "COS_ANIMTION_TEMPLATE1314_ANDROID");
        public final static Property CosMountLandRootPath = new Property(13, String.class, "CosMountLandRootPath", false, "COS_MOUNT_LAND_ROOT_PATH");
        public final static Property PrivilegeDesc1 = new Property(14, String.class, "PrivilegeDesc1", false, "PRIVILEGE_DESC1");
        public final static Property PrivilegeDesc2 = new Property(15, String.class, "PrivilegeDesc2", false, "PRIVILEGE_DESC2");
        public final static Property PrivilegeDesc3 = new Property(16, String.class, "PrivilegeDesc3", false, "PRIVILEGE_DESC3");
        public final static Property PrivilegeDesc4 = new Property(17, String.class, "PrivilegeDesc4", false, "PRIVILEGE_DESC4");
        public final static Property PrivilegeDesc5 = new Property(18, String.class, "PrivilegeDesc5", false, "PRIVILEGE_DESC5");
        public final static Property PrivilegeDesc6 = new Property(19, String.class, "PrivilegeDesc6", false, "PRIVILEGE_DESC6");
        public final static Property PrivilegeDesc7 = new Property(20, String.class, "PrivilegeDesc7", false, "PRIVILEGE_DESC7");
        public final static Property PrivilegeDesc8 = new Property(21, String.class, "PrivilegeDesc8", false, "PRIVILEGE_DESC8");
        public final static Property PrivilegeDesc9 = new Property(22, String.class, "PrivilegeDesc9", false, "PRIVILEGE_DESC9");
        public final static Property PrivilegeDesc10 = new Property(23, String.class, "PrivilegeDesc10", false, "PRIVILEGE_DESC10");
        public final static Property CosVipIconRootPath = new Property(24, String.class, "CosVipIconRootPath", false, "COS_VIP_ICON_ROOT_PATH");
        public final static Property CosLuckGiftIconRootPath = new Property(25, String.class, "CosLuckGiftIconRootPath", false, "COS_LUCK_GIFT_ICON_ROOT_PATH");
        public final static Property WeekStarHtml = new Property(26, String.class, "WeekStarHtml", false, "WEEK_STAR_HTML");
        public final static Property MvShareUrl = new Property(27, String.class, "MvShareUrl", false, "MV_SHARE_URL");
        public final static Property MvDownUrlValidityTime = new Property(28, String.class, "MvDownUrlValidityTime", false, "MV_DOWN_URL_VALIDITY_TIME");
        public final static Property MvInstructionUrl = new Property(29, String.class, "MvInstructionUrl", false, "MV_INSTRUCTION_URL");
        public final static Property MvIssueMinHb = new Property(30, Long.class, "MvIssueMinHb", false, "MV_ISSUE_MIN_HB");
        public final static Property CriterionUrl = new Property(31, String.class, "CriterionUrl", false, "CRITERION_URL");
        public final static Property LyzbExplainUrl = new Property(32, String.class, "LyzbExplainUrl", false, "LYZB_EXPLAIN_URL");
        public final static Property YxjcExplainUrl = new Property(33, String.class, "YxjcExplainUrl", false, "YXJC_EXPLAIN_URL");
        public final static Property LuckyPoolDocUrl = new Property(34, String.class, "LuckyPoolDocUrl", false, "LUCKY_POOL_DOC_URL");
        public final static Property RankRootPath = new Property(35, String.class, "RankRootPath", false, "RANK_ROOT_PATH");
        public final static Property HelpDocUrl = new Property(36, String.class, "helpDocUrl", false, "HELP_DOC_URL");
        public final static Property UseragreementUrl = new Property(37, String.class, "UseragreementUrl", false, "USERAGREEMENT_URL");
        public final static Property FaqUrl = new Property(38, String.class, "FaqUrl", false, "FAQ_URL");
        public final static Property UpgradeBookUrl = new Property(39, String.class, "UpgradeBookUrl", false, "UPGRADE_BOOK_URL");
        public final static Property MvIssueOpenMinHb = new Property(40, Long.class, "MvIssueOpenMinHb", false, "MV_ISSUE_OPEN_MIN_HB");
    }


    public SysConfigBeanDao(DaoConfig config) {
        super(config);
    }
    
    public SysConfigBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SYS_CONFIG_BEAN\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"COS_GIFT_ROOT_PATH\" TEXT," + // 1: CosGiftRootPath
                "\"COS_GOODS_ROOT_PATH\" TEXT," + // 2: CosGoodsRootPath
                "\"COS_ROOT_PATH\" TEXT," + // 3: CosRootPath
                "\"COS_TAG_ROOT_PATH\" TEXT," + // 4: CosTagRootPath
                "\"COS_MOUNT_ROOT_PATH\" TEXT," + // 5: CosMountRootPath
                "\"COS_ANIMATION_ROOT_PATH\" TEXT," + // 6: CosAnimationRootPath
                "\"COS_ANIMTION_TEMPLATE520\" TEXT," + // 7: CosAnimtionTemplate520
                "\"COS_ANIMTION_TEMPLATE1314\" TEXT," + // 8: CosAnimtionTemplate1314
                "\"COS_ANIMATION_LAND_ROOT_PATH\" TEXT," + // 9: CosAnimationLandRootPath
                "\"COS_GIFT_TEMPLATE1314\" TEXT," + // 10: CosGiftTemplate1314
                "\"COS_GIFT_TEMPLATE520\" TEXT," + // 11: CosGiftTemplate520
                "\"COS_ANIMTION_TEMPLATE1314_ANDROID\" TEXT," + // 12: CosAnimtionTemplate1314_android
                "\"COS_MOUNT_LAND_ROOT_PATH\" TEXT," + // 13: CosMountLandRootPath
                "\"PRIVILEGE_DESC1\" TEXT," + // 14: PrivilegeDesc1
                "\"PRIVILEGE_DESC2\" TEXT," + // 15: PrivilegeDesc2
                "\"PRIVILEGE_DESC3\" TEXT," + // 16: PrivilegeDesc3
                "\"PRIVILEGE_DESC4\" TEXT," + // 17: PrivilegeDesc4
                "\"PRIVILEGE_DESC5\" TEXT," + // 18: PrivilegeDesc5
                "\"PRIVILEGE_DESC6\" TEXT," + // 19: PrivilegeDesc6
                "\"PRIVILEGE_DESC7\" TEXT," + // 20: PrivilegeDesc7
                "\"PRIVILEGE_DESC8\" TEXT," + // 21: PrivilegeDesc8
                "\"PRIVILEGE_DESC9\" TEXT," + // 22: PrivilegeDesc9
                "\"PRIVILEGE_DESC10\" TEXT," + // 23: PrivilegeDesc10
                "\"COS_VIP_ICON_ROOT_PATH\" TEXT," + // 24: CosVipIconRootPath
                "\"COS_LUCK_GIFT_ICON_ROOT_PATH\" TEXT," + // 25: CosLuckGiftIconRootPath
                "\"WEEK_STAR_HTML\" TEXT," + // 26: WeekStarHtml
                "\"MV_SHARE_URL\" TEXT," + // 27: MvShareUrl
                "\"MV_DOWN_URL_VALIDITY_TIME\" TEXT," + // 28: MvDownUrlValidityTime
                "\"MV_INSTRUCTION_URL\" TEXT," + // 29: MvInstructionUrl
                "\"MV_ISSUE_MIN_HB\" INTEGER," + // 30: MvIssueMinHb
                "\"CRITERION_URL\" TEXT," + // 31: CriterionUrl
                "\"LYZB_EXPLAIN_URL\" TEXT," + // 32: LyzbExplainUrl
                "\"YXJC_EXPLAIN_URL\" TEXT," + // 33: YxjcExplainUrl
                "\"LUCKY_POOL_DOC_URL\" TEXT," + // 34: LuckyPoolDocUrl
                "\"RANK_ROOT_PATH\" TEXT," + // 35: RankRootPath
                "\"HELP_DOC_URL\" TEXT," + // 36: helpDocUrl
                "\"USERAGREEMENT_URL\" TEXT," + // 37: UseragreementUrl
                "\"FAQ_URL\" TEXT," + // 38: FaqUrl
                "\"UPGRADE_BOOK_URL\" TEXT," + // 39: UpgradeBookUrl
                "\"MV_ISSUE_OPEN_MIN_HB\" INTEGER);"); // 40: MvIssueOpenMinHb
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SYS_CONFIG_BEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, SysConfigBean entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String CosGiftRootPath = entity.getCosGiftRootPath();
        if (CosGiftRootPath != null) {
            stmt.bindString(2, CosGiftRootPath);
        }
 
        String CosGoodsRootPath = entity.getCosGoodsRootPath();
        if (CosGoodsRootPath != null) {
            stmt.bindString(3, CosGoodsRootPath);
        }
 
        String CosRootPath = entity.getCosRootPath();
        if (CosRootPath != null) {
            stmt.bindString(4, CosRootPath);
        }
 
        String CosTagRootPath = entity.getCosTagRootPath();
        if (CosTagRootPath != null) {
            stmt.bindString(5, CosTagRootPath);
        }
 
        String CosMountRootPath = entity.getCosMountRootPath();
        if (CosMountRootPath != null) {
            stmt.bindString(6, CosMountRootPath);
        }
 
        String CosAnimationRootPath = entity.getCosAnimationRootPath();
        if (CosAnimationRootPath != null) {
            stmt.bindString(7, CosAnimationRootPath);
        }
 
        String CosAnimtionTemplate520 = entity.getCosAnimtionTemplate520();
        if (CosAnimtionTemplate520 != null) {
            stmt.bindString(8, CosAnimtionTemplate520);
        }
 
        String CosAnimtionTemplate1314 = entity.getCosAnimtionTemplate1314();
        if (CosAnimtionTemplate1314 != null) {
            stmt.bindString(9, CosAnimtionTemplate1314);
        }
 
        String CosAnimationLandRootPath = entity.getCosAnimationLandRootPath();
        if (CosAnimationLandRootPath != null) {
            stmt.bindString(10, CosAnimationLandRootPath);
        }
 
        String CosGiftTemplate1314 = entity.getCosGiftTemplate1314();
        if (CosGiftTemplate1314 != null) {
            stmt.bindString(11, CosGiftTemplate1314);
        }
 
        String CosGiftTemplate520 = entity.getCosGiftTemplate520();
        if (CosGiftTemplate520 != null) {
            stmt.bindString(12, CosGiftTemplate520);
        }
 
        String CosAnimtionTemplate1314_android = entity.getCosAnimtionTemplate1314_android();
        if (CosAnimtionTemplate1314_android != null) {
            stmt.bindString(13, CosAnimtionTemplate1314_android);
        }
 
        String CosMountLandRootPath = entity.getCosMountLandRootPath();
        if (CosMountLandRootPath != null) {
            stmt.bindString(14, CosMountLandRootPath);
        }
 
        String PrivilegeDesc1 = entity.getPrivilegeDesc1();
        if (PrivilegeDesc1 != null) {
            stmt.bindString(15, PrivilegeDesc1);
        }
 
        String PrivilegeDesc2 = entity.getPrivilegeDesc2();
        if (PrivilegeDesc2 != null) {
            stmt.bindString(16, PrivilegeDesc2);
        }
 
        String PrivilegeDesc3 = entity.getPrivilegeDesc3();
        if (PrivilegeDesc3 != null) {
            stmt.bindString(17, PrivilegeDesc3);
        }
 
        String PrivilegeDesc4 = entity.getPrivilegeDesc4();
        if (PrivilegeDesc4 != null) {
            stmt.bindString(18, PrivilegeDesc4);
        }
 
        String PrivilegeDesc5 = entity.getPrivilegeDesc5();
        if (PrivilegeDesc5 != null) {
            stmt.bindString(19, PrivilegeDesc5);
        }
 
        String PrivilegeDesc6 = entity.getPrivilegeDesc6();
        if (PrivilegeDesc6 != null) {
            stmt.bindString(20, PrivilegeDesc6);
        }
 
        String PrivilegeDesc7 = entity.getPrivilegeDesc7();
        if (PrivilegeDesc7 != null) {
            stmt.bindString(21, PrivilegeDesc7);
        }
 
        String PrivilegeDesc8 = entity.getPrivilegeDesc8();
        if (PrivilegeDesc8 != null) {
            stmt.bindString(22, PrivilegeDesc8);
        }
 
        String PrivilegeDesc9 = entity.getPrivilegeDesc9();
        if (PrivilegeDesc9 != null) {
            stmt.bindString(23, PrivilegeDesc9);
        }
 
        String PrivilegeDesc10 = entity.getPrivilegeDesc10();
        if (PrivilegeDesc10 != null) {
            stmt.bindString(24, PrivilegeDesc10);
        }
 
        String CosVipIconRootPath = entity.getCosVipIconRootPath();
        if (CosVipIconRootPath != null) {
            stmt.bindString(25, CosVipIconRootPath);
        }
 
        String CosLuckGiftIconRootPath = entity.getCosLuckGiftIconRootPath();
        if (CosLuckGiftIconRootPath != null) {
            stmt.bindString(26, CosLuckGiftIconRootPath);
        }
 
        String WeekStarHtml = entity.getWeekStarHtml();
        if (WeekStarHtml != null) {
            stmt.bindString(27, WeekStarHtml);
        }
 
        String MvShareUrl = entity.getMvShareUrl();
        if (MvShareUrl != null) {
            stmt.bindString(28, MvShareUrl);
        }
 
        String MvDownUrlValidityTime = entity.getMvDownUrlValidityTime();
        if (MvDownUrlValidityTime != null) {
            stmt.bindString(29, MvDownUrlValidityTime);
        }
 
        String MvInstructionUrl = entity.getMvInstructionUrl();
        if (MvInstructionUrl != null) {
            stmt.bindString(30, MvInstructionUrl);
        }
 
        Long MvIssueMinHb = entity.getMvIssueMinHb();
        if (MvIssueMinHb != null) {
            stmt.bindLong(31, MvIssueMinHb);
        }
 
        String CriterionUrl = entity.getCriterionUrl();
        if (CriterionUrl != null) {
            stmt.bindString(32, CriterionUrl);
        }
 
        String LyzbExplainUrl = entity.getLyzbExplainUrl();
        if (LyzbExplainUrl != null) {
            stmt.bindString(33, LyzbExplainUrl);
        }
 
        String YxjcExplainUrl = entity.getYxjcExplainUrl();
        if (YxjcExplainUrl != null) {
            stmt.bindString(34, YxjcExplainUrl);
        }
 
        String LuckyPoolDocUrl = entity.getLuckyPoolDocUrl();
        if (LuckyPoolDocUrl != null) {
            stmt.bindString(35, LuckyPoolDocUrl);
        }
 
        String RankRootPath = entity.getRankRootPath();
        if (RankRootPath != null) {
            stmt.bindString(36, RankRootPath);
        }
 
        String helpDocUrl = entity.getHelpDocUrl();
        if (helpDocUrl != null) {
            stmt.bindString(37, helpDocUrl);
        }
 
        String UseragreementUrl = entity.getUseragreementUrl();
        if (UseragreementUrl != null) {
            stmt.bindString(38, UseragreementUrl);
        }
 
        String FaqUrl = entity.getFaqUrl();
        if (FaqUrl != null) {
            stmt.bindString(39, FaqUrl);
        }
 
        String UpgradeBookUrl = entity.getUpgradeBookUrl();
        if (UpgradeBookUrl != null) {
            stmt.bindString(40, UpgradeBookUrl);
        }
 
        Long MvIssueOpenMinHb = entity.getMvIssueOpenMinHb();
        if (MvIssueOpenMinHb != null) {
            stmt.bindLong(41, MvIssueOpenMinHb);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, SysConfigBean entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String CosGiftRootPath = entity.getCosGiftRootPath();
        if (CosGiftRootPath != null) {
            stmt.bindString(2, CosGiftRootPath);
        }
 
        String CosGoodsRootPath = entity.getCosGoodsRootPath();
        if (CosGoodsRootPath != null) {
            stmt.bindString(3, CosGoodsRootPath);
        }
 
        String CosRootPath = entity.getCosRootPath();
        if (CosRootPath != null) {
            stmt.bindString(4, CosRootPath);
        }
 
        String CosTagRootPath = entity.getCosTagRootPath();
        if (CosTagRootPath != null) {
            stmt.bindString(5, CosTagRootPath);
        }
 
        String CosMountRootPath = entity.getCosMountRootPath();
        if (CosMountRootPath != null) {
            stmt.bindString(6, CosMountRootPath);
        }
 
        String CosAnimationRootPath = entity.getCosAnimationRootPath();
        if (CosAnimationRootPath != null) {
            stmt.bindString(7, CosAnimationRootPath);
        }
 
        String CosAnimtionTemplate520 = entity.getCosAnimtionTemplate520();
        if (CosAnimtionTemplate520 != null) {
            stmt.bindString(8, CosAnimtionTemplate520);
        }
 
        String CosAnimtionTemplate1314 = entity.getCosAnimtionTemplate1314();
        if (CosAnimtionTemplate1314 != null) {
            stmt.bindString(9, CosAnimtionTemplate1314);
        }
 
        String CosAnimationLandRootPath = entity.getCosAnimationLandRootPath();
        if (CosAnimationLandRootPath != null) {
            stmt.bindString(10, CosAnimationLandRootPath);
        }
 
        String CosGiftTemplate1314 = entity.getCosGiftTemplate1314();
        if (CosGiftTemplate1314 != null) {
            stmt.bindString(11, CosGiftTemplate1314);
        }
 
        String CosGiftTemplate520 = entity.getCosGiftTemplate520();
        if (CosGiftTemplate520 != null) {
            stmt.bindString(12, CosGiftTemplate520);
        }
 
        String CosAnimtionTemplate1314_android = entity.getCosAnimtionTemplate1314_android();
        if (CosAnimtionTemplate1314_android != null) {
            stmt.bindString(13, CosAnimtionTemplate1314_android);
        }
 
        String CosMountLandRootPath = entity.getCosMountLandRootPath();
        if (CosMountLandRootPath != null) {
            stmt.bindString(14, CosMountLandRootPath);
        }
 
        String PrivilegeDesc1 = entity.getPrivilegeDesc1();
        if (PrivilegeDesc1 != null) {
            stmt.bindString(15, PrivilegeDesc1);
        }
 
        String PrivilegeDesc2 = entity.getPrivilegeDesc2();
        if (PrivilegeDesc2 != null) {
            stmt.bindString(16, PrivilegeDesc2);
        }
 
        String PrivilegeDesc3 = entity.getPrivilegeDesc3();
        if (PrivilegeDesc3 != null) {
            stmt.bindString(17, PrivilegeDesc3);
        }
 
        String PrivilegeDesc4 = entity.getPrivilegeDesc4();
        if (PrivilegeDesc4 != null) {
            stmt.bindString(18, PrivilegeDesc4);
        }
 
        String PrivilegeDesc5 = entity.getPrivilegeDesc5();
        if (PrivilegeDesc5 != null) {
            stmt.bindString(19, PrivilegeDesc5);
        }
 
        String PrivilegeDesc6 = entity.getPrivilegeDesc6();
        if (PrivilegeDesc6 != null) {
            stmt.bindString(20, PrivilegeDesc6);
        }
 
        String PrivilegeDesc7 = entity.getPrivilegeDesc7();
        if (PrivilegeDesc7 != null) {
            stmt.bindString(21, PrivilegeDesc7);
        }
 
        String PrivilegeDesc8 = entity.getPrivilegeDesc8();
        if (PrivilegeDesc8 != null) {
            stmt.bindString(22, PrivilegeDesc8);
        }
 
        String PrivilegeDesc9 = entity.getPrivilegeDesc9();
        if (PrivilegeDesc9 != null) {
            stmt.bindString(23, PrivilegeDesc9);
        }
 
        String PrivilegeDesc10 = entity.getPrivilegeDesc10();
        if (PrivilegeDesc10 != null) {
            stmt.bindString(24, PrivilegeDesc10);
        }
 
        String CosVipIconRootPath = entity.getCosVipIconRootPath();
        if (CosVipIconRootPath != null) {
            stmt.bindString(25, CosVipIconRootPath);
        }
 
        String CosLuckGiftIconRootPath = entity.getCosLuckGiftIconRootPath();
        if (CosLuckGiftIconRootPath != null) {
            stmt.bindString(26, CosLuckGiftIconRootPath);
        }
 
        String WeekStarHtml = entity.getWeekStarHtml();
        if (WeekStarHtml != null) {
            stmt.bindString(27, WeekStarHtml);
        }
 
        String MvShareUrl = entity.getMvShareUrl();
        if (MvShareUrl != null) {
            stmt.bindString(28, MvShareUrl);
        }
 
        String MvDownUrlValidityTime = entity.getMvDownUrlValidityTime();
        if (MvDownUrlValidityTime != null) {
            stmt.bindString(29, MvDownUrlValidityTime);
        }
 
        String MvInstructionUrl = entity.getMvInstructionUrl();
        if (MvInstructionUrl != null) {
            stmt.bindString(30, MvInstructionUrl);
        }
 
        Long MvIssueMinHb = entity.getMvIssueMinHb();
        if (MvIssueMinHb != null) {
            stmt.bindLong(31, MvIssueMinHb);
        }
 
        String CriterionUrl = entity.getCriterionUrl();
        if (CriterionUrl != null) {
            stmt.bindString(32, CriterionUrl);
        }
 
        String LyzbExplainUrl = entity.getLyzbExplainUrl();
        if (LyzbExplainUrl != null) {
            stmt.bindString(33, LyzbExplainUrl);
        }
 
        String YxjcExplainUrl = entity.getYxjcExplainUrl();
        if (YxjcExplainUrl != null) {
            stmt.bindString(34, YxjcExplainUrl);
        }
 
        String LuckyPoolDocUrl = entity.getLuckyPoolDocUrl();
        if (LuckyPoolDocUrl != null) {
            stmt.bindString(35, LuckyPoolDocUrl);
        }
 
        String RankRootPath = entity.getRankRootPath();
        if (RankRootPath != null) {
            stmt.bindString(36, RankRootPath);
        }
 
        String helpDocUrl = entity.getHelpDocUrl();
        if (helpDocUrl != null) {
            stmt.bindString(37, helpDocUrl);
        }
 
        String UseragreementUrl = entity.getUseragreementUrl();
        if (UseragreementUrl != null) {
            stmt.bindString(38, UseragreementUrl);
        }
 
        String FaqUrl = entity.getFaqUrl();
        if (FaqUrl != null) {
            stmt.bindString(39, FaqUrl);
        }
 
        String UpgradeBookUrl = entity.getUpgradeBookUrl();
        if (UpgradeBookUrl != null) {
            stmt.bindString(40, UpgradeBookUrl);
        }
 
        Long MvIssueOpenMinHb = entity.getMvIssueOpenMinHb();
        if (MvIssueOpenMinHb != null) {
            stmt.bindLong(41, MvIssueOpenMinHb);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public SysConfigBean readEntity(Cursor cursor, int offset) {
        SysConfigBean entity = new SysConfigBean( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // CosGiftRootPath
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // CosGoodsRootPath
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // CosRootPath
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // CosTagRootPath
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // CosMountRootPath
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // CosAnimationRootPath
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // CosAnimtionTemplate520
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // CosAnimtionTemplate1314
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // CosAnimationLandRootPath
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // CosGiftTemplate1314
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // CosGiftTemplate520
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // CosAnimtionTemplate1314_android
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // CosMountLandRootPath
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // PrivilegeDesc1
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // PrivilegeDesc2
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // PrivilegeDesc3
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // PrivilegeDesc4
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // PrivilegeDesc5
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // PrivilegeDesc6
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // PrivilegeDesc7
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // PrivilegeDesc8
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // PrivilegeDesc9
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // PrivilegeDesc10
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // CosVipIconRootPath
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // CosLuckGiftIconRootPath
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // WeekStarHtml
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // MvShareUrl
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // MvDownUrlValidityTime
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // MvInstructionUrl
            cursor.isNull(offset + 30) ? null : cursor.getLong(offset + 30), // MvIssueMinHb
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // CriterionUrl
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // LyzbExplainUrl
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // YxjcExplainUrl
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // LuckyPoolDocUrl
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // RankRootPath
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // helpDocUrl
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // UseragreementUrl
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // FaqUrl
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // UpgradeBookUrl
            cursor.isNull(offset + 40) ? null : cursor.getLong(offset + 40) // MvIssueOpenMinHb
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, SysConfigBean entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setCosGiftRootPath(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setCosGoodsRootPath(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setCosRootPath(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setCosTagRootPath(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setCosMountRootPath(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setCosAnimationRootPath(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setCosAnimtionTemplate520(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setCosAnimtionTemplate1314(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setCosAnimationLandRootPath(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setCosGiftTemplate1314(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setCosGiftTemplate520(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setCosAnimtionTemplate1314_android(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setCosMountLandRootPath(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setPrivilegeDesc1(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setPrivilegeDesc2(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setPrivilegeDesc3(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setPrivilegeDesc4(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setPrivilegeDesc5(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setPrivilegeDesc6(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setPrivilegeDesc7(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setPrivilegeDesc8(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setPrivilegeDesc9(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setPrivilegeDesc10(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setCosVipIconRootPath(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setCosLuckGiftIconRootPath(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setWeekStarHtml(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setMvShareUrl(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setMvDownUrlValidityTime(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setMvInstructionUrl(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setMvIssueMinHb(cursor.isNull(offset + 30) ? null : cursor.getLong(offset + 30));
        entity.setCriterionUrl(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setLyzbExplainUrl(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setYxjcExplainUrl(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setLuckyPoolDocUrl(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setRankRootPath(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setHelpDocUrl(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setUseragreementUrl(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setFaqUrl(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setUpgradeBookUrl(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setMvIssueOpenMinHb(cursor.isNull(offset + 40) ? null : cursor.getLong(offset + 40));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(SysConfigBean entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(SysConfigBean entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(SysConfigBean entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
